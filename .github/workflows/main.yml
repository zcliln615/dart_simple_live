name: app-build-release

on:
  push:
    tags:
      - "v*"  # 推送 v 开头的标签（如 v1.0.0）时触发

jobs:
  build-release:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest, ubuntu-22.04, windows-latest]
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
        with:
          ref: master  # 从主分支构建正式版

      # 读取版本信息（从 assets/app_version.json 读取）
      - name: Read Version Info
        id: version
        uses: juliangruber/read-file-action@v1
        with:
          path: assets/app_version.json

      # 配置 Flutter
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.22.x'
          cache: true

      # 根据操作系统构建对应平台包
      - name: Build for macOS/iOS/Android (macOS runner)
        if: matrix.os == 'macos-latest'
        run: |
          # 启用 macOS 桌面支持
          flutter config --enable-macos-desktop
          # 安装依赖
          cd simple_live_app && flutter pub get
          # 安装打包工具
          npm install -g appdmg
          dart pub global activate flutter_distributor
          # 构建 Android APK
          flutter build apk --release --split-per-abi
          # 构建 macOS 包
          flutter_distributor package --platform macos --targets dmg,zip --skip-clean
          # 构建未签名 iOS IPA
          flutter build ios --release --no-codesign
          mkdir -p simple_live_app/build/ios/iphoneos/Payload
          cp -R simple_live_app/build/ios/iphoneos/Runner.app simple_live_app/build/ios/iphoneos/Payload/
          cd simple_live_app/build/ios/iphoneos && zip -q -r ios_no_sign.ipa Payload

      - name: Build for Linux (Ubuntu runner)
        if: matrix.os == 'ubuntu-22.04'
        run: |
          # 安装系统依赖
          sudo apt-get update && sudo apt-get install -y clang cmake libgtk-3-dev liblzma-dev libmpv-dev mpv
          # 启用 Linux 桌面支持
          flutter config --enable-linux-desktop
          # 安装依赖
          cd simple_live_app && flutter pub get
          # 构建 Linux 包
          dart pub global activate flutter_distributor
          flutter_distributor package --platform linux --targets deb,zip --skip-clean

      - name: Build for Windows (Windows runner)
        if: matrix.os == 'windows-latest'
        run: |
          # 启用 Windows 桌面支持
          flutter config --enable-windows-desktop
          # 安装依赖
          cd simple_live_app && flutter pub get
          # 构建 Windows 包
          dart pub global activate flutter_distributor
          flutter_distributor package --platform windows --targets msix,zip --skip-clean

      # 上传产物到 GitHub Releases
      - name: Publish to Releases
        uses: softprops/action-gh-release@v1
        with:
          name: ${{ fromJson(steps.version.outputs.content).version }}  # 从版本文件读取名称
          body: ${{ fromJson(steps.version.outputs.content).version_desc }}  # 从版本文件读取描述
          prerelease: ${{ fromJson(steps.version.outputs.content).prerelease }}  # 是否为预发布
          token: ${{ secrets.TOKEN }}  # 仓库 Secrets 中的 GitHub Token
          files: |
            # Android 产物
            simple_live_app/build/app/outputs/flutter-apk/*.apk
            # iOS 产物
            simple_live_app/build/ios/iphoneos/ios_no_sign.ipa
            # macOS 产物
            simple_live_app/build/dist/*/*.{dmg,zip}
            # Linux 产物
            simple_live_app/build/dist/*/*.{deb,zip}
            # Windows 产物
            simple_live_app/build/dist/*/*.{msix,zip}
